name: Build
on:
  push:
    branches:
      - main
      - dev # Asegúrate de que 'dev' esté también
      - fix/compile-errors # ¡Añadimos nuestra rama para que el push la active!
    tags:
      - 'v*'
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - '.github/**'
      - '!.github/workflows/build.yml'
      - 'appcast.xml'
  pull_request: # ¡Descomentamos esta sección y la configuramos!
    branches:
      - main
      - dev # Asegúrate de que 'dev' esté también
      - fix/compile-errors # ¡Añadimos nuestra rama aquí para que el PR la active!

env: # ¡Este bloque 'env' debe ir aquí, justo después de 'on:'!
  CHANNEL: ${{ github.ref_type == 'tag' && endsWith(github.ref_name, 'dev') && 'dev' || github.ref_type != 'tag' && 'dev' || 'prod' }}
  NDK_VERSION: r26b
concurrency: # Y 'concurrency' va justo después de 'env'
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  build:
    permissions: write-all
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: android-apk
            os: ubuntu-latest
            targets: apk

          - platform: android-aab
            os: ubuntu-latest
            targets: aab

    runs-on: ${{ matrix.os }}
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.16.x'
          channel: 'stable'
          cache: true

      - name: Setup Java
        if: startsWith(matrix.platform,'android')
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 11

      - name: Setup NDK
        if: startsWith(matrix.platform,'android')
        uses: nttld/setup-ndk@v1.4.1
        id: setup-ndk
        with:
          ndk-version: ${{ env.NDK_VERSION }}
          add-to-path: true
          link-to-sdk: true

      - name: Get Geo Assets
        run: |
          make get-geo-assets

      - name: Get Dependencies
        run: |
          make get

      - name: Generate
        run: |
          make translate
          make gen

      - name: Get Libs ${{ matrix.platform }}
        run: |
           # Para Android, llamar directamente a la regla 'android-libs' en el Makefile
           make android-libs

      - name: Setup Android Signing Properties
        if: startsWith(matrix.platform,'android')
        run: |
          echo "${{ secrets.ANDROID_SIGNING_KEY }}" | base64 --decode > android/key.jks
          echo "storeFile=$(pwd)/android/key.jks" > android/key.properties
          echo "storePassword=${{ secrets.ANDROID_SIGNING_STORE_PASSWORD }}" >> android/key.properties
          echo "keyPassword=${{ secrets.ANDROID_SIGNING_KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.ANDROID_SIGNING_KEY_ALIAS }}" >> android/key.properties

      - name: Release ${{ matrix.platform }}
        env:
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
        run: |
          make ${{ matrix.platform }}-release

      - name: Upload Debug Symbols
        if: ${{ github.ref_type == 'tag' }}
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
          SENTRY_DIST: ${{ matrix.platform == 'android-aab' && 'google-play' || 'general' }}
        run: |
          flutter packages pub run sentry_dart_plugin

      - name: Copy to out Android apk
        if: matrix.platform == 'android-apk'
        run: |
          mkdir out
          ls -R ./build/app/outputs
          cp ./build/app/outputs/flutter-apk/*arm64-v8a*.apk out/hiddify-android-arm64.apk || echo "no arm64 apk"
          cp ./build/app/outputs/flutter-apk/*armeabi-v7a*.apk out/hiddify-android-arm7.apk || echo "no arm7 apk"
          cp ./build/app/outputs/flutter-apk/*x86_64*.apk out/hiddify-android-x86_64.apk || echo "no x64 apk"
          cp ./build/app/outputs/flutter-apk/app-release.apk out/hiddify-android-universal.apk || echo "no universal apk"

      - name: Copy to out Android aab
        if: matrix.platform == 'android-aab'
        run: |
          mkdir out
          ls -R ./build/app/outputs
          cp ./build/app/outputs/bundle/release/app-release.aab out/hiddify-android-market.aab || echo "no aab"

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: artifact
          path: ./out
          retention-days: 2

  upload-draft:
    permissions: write-all
    if: ${{ github.ref_type == 'branch' }}
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: artifact
          path: ./out/

      - name: Display Files Structure
        run: ls -R
        working-directory: ./out

      - name: Delete Current Release Assets
        uses: 8Mi-Tech/delete-release-assets-action@main
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tag: 'draft'
          deleteOnlyFromDrafts: false

      - name: Create or Update Draft Release
        uses: softprops/action-gh-release@v1
        if: ${{ github.ref_type != 'tag' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: ./out/*
          name: 'draft'
          tag_name: 'draft'
          prerelease: true

  upload-release:
    permissions: write-all
    if: ${{ github.ref_type == 'tag' }}
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - uses: actions/download-artifact@v4
        with:
          name: artifact
          path: ./out/

      - name: Display Files Structure
        run: |
          ls -R ./out
          ls -R ./.github/
          ls -R ./.git/
          mv out/hiddify-android-market.aab  hiddify-android-market.aab

      - name: prepare_release_message
        run: |
          pip install gitchangelog pystache mustache markdown
          # prelease=$(curl --silent "https://api.github.com/repos/hiddify/hiddify-next/releases/latest" | grep -Po '"tag_name": "\K.*?(?=")')
          # current="${{ github.ref_name }}"
          # gitchangelog $prelease..$current > release.md
          sed 's|RELEASE_TAG|${{ github.ref_name }}|g' ./.github/release_message.md >> release.md

      - name: Upload Release
        uses: softprops/action-gh-release@v1
        if: ${{ success() }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          prerelease: ${{ env.CHANNEL == 'dev' }}
          tag_name: ${{ github.ref_name }}
          body_path: './release.md'
          files: ./out/*

      - name: Create service_account.json
        run: echo '${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT_JSON }}' > service_account.json

      - name: Deploy to Google Play Internal Testers
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJson: service_account.json
          packageName: app.hiddify.com
          releaseName: ${{ github.ref }}
          releaseFiles: ./hiddify-android-market.aab
          # track: ${{ env.CHANNEL == 'dev' && 'beta' || 'internal' }}
          track:  'beta'

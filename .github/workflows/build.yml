name: Build

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - fix/compile-errors
    tags:
      - "v*"
  pull_request:
    branches:
      - main
      - fix/compile-errors

jobs:
  build-android:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Flutter
        run: |
          git clone https://github.com/flutter/flutter.git -b stable --depth 1
          echo "$GITHUB_WORKSPACE/flutter/bin" >> $GITHUB_PATH
          export PATH="$GITHUB_WORKSPACE/flutter/bin:$PATH"
          flutter --version
          flutter doctor
          flutter config --no-analytics

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Setup NDK
        uses: nttld/setup-ndk@v1.4.2
        with:
          ndk-version: r25c
          add-to-path: false

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Install gomobile
        run: |
          export PATH="$GITHUB_WORKSPACE/flutter/bin:$PATH"
          go install golang.org/x/mobile/cmd/gomobile@latest
          gomobile init

      - name: Make android prepare
        run: |
          export PATH="$GITHUB_WORKSPACE/flutter/bin:$PATH"
          export ANDROID_NDK_HOME=${{ steps.setup-ndk.outputs.ndk-path }}
          make android-prepare
        env:
          ANDROID_NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}

      - name: Get Flutter dependencies
        run: |
          export PATH="$GITHUB_WORKSPACE/flutter/bin:$PATH"
          flutter pub get

      - name: Generate code
        run: |
          export PATH="$GITHUB_WORKSPACE/flutter/bin:$PATH"
          dart run build_runner build --delete-conflicting-outputs

      - name: Build APK (Debug)
        run: |
          export PATH="$GITHUB_WORKSPACE/flutter/bin:$PATH"
          flutter build apk --debug
        env:
          ANDROID_NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}

      - name: Build APK (Release)
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          export PATH="$GITHUB_WORKSPACE/flutter/bin:$PATH"
          flutter build apk --release
        env:
          ANDROID_NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}

      - name: Build AAB (Release)
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          export PATH="$GITHUB_WORKSPACE/flutter/bin:$PATH"
          flutter build appbundle --release
        env:
          ANDROID_NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}

      - name: Upload Debug APK
        if: "!startsWith(github.ref, 'refs/tags/')"
        uses: actions/upload-artifact@v4
        with:
          name: android-debug-apk
          path: build/app/outputs/flutter-apk/app-debug.apk

      - name: Upload Release Artifacts
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-artifact@v4
        with:
          name: android-release
          path: |
            build/app/outputs/flutter-apk/app-release.apk
            build/app/outputs/bundle/release/app-release.aab

  release:
    if: startsWith(github.ref, 'refs/tags/')
    needs: [build-android]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download Android artifacts
        uses: actions/download-artifact@v4
        with:
          name: android-release
          path: ./artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ./artifacts/app-release.apk
            ./artifacts/app-release.aab
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

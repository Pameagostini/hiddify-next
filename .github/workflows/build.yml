name: Build
on:
  push:
    branches:
      - main
      - dev
      - fix/compile-errors
    tags:
      - 'v*'
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - '.github/**'
      - '!.github/workflows/build.yml'
      - 'appcast.xml'
  pull_request:
    branches:
      - main
      - dev
      - fix/compile-errors

env:
  CHANNEL: ${{ github.ref_type == 'tag' && endsWith(github.ref_name, 'dev') && 'dev' || github.ref_type != 'tag' && 'dev' || 'prod' }}
  NDK_VERSION: r26b
concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  build:
    permissions: write-all
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: android-apk
            os: ubuntu-latest
            targets: apk

          - platform: android-aab
            os: ubuntu-latest
            targets: aab

    runs-on: ${{ matrix.os }}
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          submodules: true # ¡ESTA ES LA LÍNEA NUEVA Y CRÍTICA!

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.16.x'
          channel: 'stable'
          cache: true

      - name: Setup Java
        if: startsWith(matrix.platform,'android')
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 11

      - name: Setup NDK
        if: startsWith(matrix.platform,'android')
        uses: nttld/setup-ndk@v1.4.1
        id: setup-ndk
        with:
          ndk-version: ${{ env.NDK_VERSION }}

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version-file: 'libcore/go.mod'
          cache: true
          cache-dependency-path: 'libcore/go.sum'

      - name: Prepare Build Environment
        run: |
          make get
          make get-geo-assets
          make translate
          make gen

      - name: Debug Before Get Libs
        run: |
          echo "Current working directory:"
          pwd
          echo "Files in current directory:"
          ls -l
          echo "Checking dependencies.properties:"
          if [ -f "dependencies.properties" ]; then
            echo "dependencies.properties exists. Content:"
            cat dependencies.properties
          else
            echo "Error: dependencies.properties does NOT exist!"
          fi
          echo "Content of Makefile:" # Nuevo: Imprime el contenido del Makefile
          cat Makefile

      - name: Get Libs ${{ matrix.platform }}
        run: |
          set -euxo pipefail
          echo "Attempting to run make -f Makefile android-libs"
          make -f Makefile android-libs # Cambio: Usar -f Makefile explícitamente

      - name: Setup Android Signing Properties
        if: startsWith(matrix.platform,'android')
        run: |
          echo "${{ secrets.ANDROID_SIGNING_KEY }}" | base64 --decode > android/key.jks
          echo "storeFile=$(pwd)/android/key.jks" > android/key.properties
          echo "storePassword=${{ secrets.ANDROID_SIGNING_STORE_PASSWORD }}" >> android/key.properties
          echo "keyPassword=${{ secrets.ANDROID_SIGNING_KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.ANDROID_SIGNING_KEY_ALIAS }}" >> android/key.properties

      - name: make ${{ matrix.platform }}-release
        run: make ${{ matrix.platform }}-release

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.filename || format('{0}-{1}-{2}', github.ref_name, matrix.platform, github.sha) }}
          path: build/app/outputs/flutter-build/*
          if-no-files-found: ignore

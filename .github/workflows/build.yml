name: Build Android TV App

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: false
        fetch-depth: 1

    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '17'

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.0'
        channel: 'stable'
        cache: true

    - name: Download hiddify-core manually
      run: |
        echo "📥 Downloading hiddify-core manually..."
        
        # Crear directorio libcore si no existe
        mkdir -p libcore
        
        # Intentar descargar hiddify-core con múltiples métodos
        if curl -L --connect-timeout 30 --max-time 300 \
           "https://github.com/hiddify/hiddify-core/archive/refs/heads/main.tar.gz" \
           -o hiddify-core.tar.gz; then
          echo "✅ Downloaded as tar.gz"
          tar -xzf hiddify-core.tar.gz
          if [ -d "hiddify-core-main" ]; then
            cp -r hiddify-core-main/* libcore/ 2>/dev/null || true
            cp -r hiddify-core-main/.* libcore/ 2>/dev/null || true
          fi
          rm -rf hiddify-core.tar.gz hiddify-core-main
        elif curl -L --connect-timeout 30 --max-time 300 \
             "https://github.com/hiddify/hiddify-core/archive/refs/heads/main.zip" \
             -o hiddify-core.zip; then
          echo "✅ Downloaded as zip"
          unzip -q hiddify-core.zip
          if [ -d "hiddify-core-main" ]; then
            cp -r hiddify-core-main/* libcore/ 2>/dev/null || true
            cp -r hiddify-core-main/.* libcore/ 2>/dev/null || true
          fi
          rm -rf hiddify-core.zip hiddify-core-main
        else
          echo "❌ Failed to download hiddify-core"
          echo "Creating empty libcore directory to continue build..."
          touch libcore/.gitkeep
        fi
        
        echo "📄 libcore status:"
        ls -la libcore/ || echo "libcore directory is empty"

    - name: Get Flutter dependencies
      run: |
        echo "📦 Getting Flutter dependencies..."
        flutter pub get
        
    - name: Check Flutter doctor
      run: |
        echo "🔍 Checking Flutter setup..."
        flutter doctor -v

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      with:
        api-level: 34
        build-tools: 34.0.0

    - name: Accept Android SDK licenses
      run: yes | flutter doctor --android-licenses

    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Build Android APK
      run: |
        echo "🚀 Building Android APK..."
        
        # Intentar build normal primero
        flutter build apk --release --target-platform android-arm64 || {
          echo "❌ First build attempt failed, trying with verbose output..."
          flutter build apk --release --target-platform android-arm64 --verbose
        }

    - name: Build Android TV APK (if different configuration exists)
      run: |
        echo "📺 Checking for Android TV specific configuration..."
        
        # Verificar si hay configuración específica para TV
        if [ -f "android/app/src/tv/AndroidManifest.xml" ] || 
           [ -f "android/app/build.gradle" ] && grep -q "tv" android/app/build.gradle; then
          echo "🚀 Building Android TV specific version..."
          flutter build apk --release --flavor tv --target-platform android-arm64 || {
            echo "TV flavor not found, using standard build..."
          }
        else
          echo "📱 No TV-specific configuration found, using standard Android build"
        fi

    - name: List generated APKs
      run: |
        echo "📋 Generated APK files:"
        find . -name "*.apk" -type f -exec ls -lh {} \;

    - name: Upload APK artifacts
      uses: actions/upload-artifact@v4
      with:
        name: android-tv-apk-${{ github.run_number }}
        path: |
          build/app/outputs/flutter-apk/*.apk
          build/app/outputs/apk/**/*.apk
        retention-days: 30

    - name: Upload build logs (on failure)
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: build-logs-${{ github.run_number }}
        path: |
          build/
          android/app/build/
        retention-days: 7
